apiVersion: erda.terminus.io/v1beta1
kind: Erda
metadata:
  name: erda
  namespace: {{ .Values.namespace | default "erda-system" }}
spec:
  customDomain:
    openapi: openapi.{{ .Values.domain }}
    ui: {{ .Values.domain }}, *.{{ .Values.domain }}
  cookieDomain: {{ .Values.domain }}
  platformDomain: {{ .Values.domain }}
  diceCluster: {{ .Values.clusterName }}
  size: 'test'
  initJobs:
    version: "2.0"
    jobs:
      init-image:
        image: registry.erda.cloud/erda/init-image:4.0-20210705-03eb7751
        resources:
          cpu: 0.5
          mem: 128

  dice:
    version: "2.0"
    meta: {}
    envs:
      ETCDCTL_API: "3"
    services:
      apim:
        image: registry.erda.cloud/erda/erda:4.0-20210521-3a995ee
        cmd: /app/apim
        ports:
          - port: 3083
            protocol: TCP
            l4_protocol: TCP
            expose: false
            default: false
        envs:
          DEBUG: "false"
        resources:
          cpu: 0.01
          mem: 100
          max_cpu: 1
          max_mem: 2048
          network:
            mode: container
        deployments:
          replicas: 1
          labels:
            GROUP: dice
        depends_on:
          - cmdb
          - uc
          - hepa
          - orchestrator
          - eventbox
          - monitor
          - gittar
        health_check:
          http:
            port: 3083
            path: /health
            duration: 120
          exec: {}
      cmdb:
        image: registry.erda.cloud/erda/cmdb:4.0-20210629-667eb5c3
        cmd: /app/cmdb
        ports:
          - port: 9093
            protocol: TCP
            l4_protocol: TCP
            expose: false
            default: false
        envs:
          AVATAR_STORAGE_URL: file:///avatars
          CMDB_CONTAINER_TOPIC: spot-metaserver_container
          CMDB_GROUP: spot_cmdb_group
          CMDB_HOST_TOPIC: spot-metaserver_host
          DEBUG: "false"
          LICENSE_KEY: XWoPm8I3FZuDclhuOhZ+qRPVHjXKCwSgZEOTyrMgtJg6f0Kz7QR0CyVN1ZWgbiou/OyABe7HyK1yVxDdeP1JuXcfOoGOdChTyiQfP5sdXUbferq5UkK7S44lMjNmzURlbdX8smSa13+8FQyDqz2BpDcBKMRfn2kKuF4n6n9Ls7HyVV7oWSKreEyIH3991Ug2grNEpcKip3ISVY7eGJ3uoahC9zs4fla1dzR47e5dgppHtf5WBjFgiSS+5qRi2mYa
          LISTEN_ADDR: :9093
          UC_CLIENT_ID: dice
          UC_CLIENT_SECRET: secret
        resources:
          cpu: 0.01
          mem: 100
          max_cpu: 1
          max_mem: 2048
          network:
            mode: container
        binds:
          - /netdata/avatars:/avatars:rw
          - /netdata/cmdb/files:/files:rw
        deployments:
          replicas: 1
          labels:
            GROUP: dice
        depends_on:
          - dicehub
          - eventbox
          - gittar
          - monitor
          - uc
          - ui
          - openapi
          - scheduler
          - orchestrator
          - pipeline
          - qa
          - hepa
          - collector
          - gittar-adaptor
        health_check:
          http:
            port: 9093
            path: /info
            duration: 120
          exec: {}
      dicehub:
        image: registry.erda.cloud/erda/erda:4.0-20210521-3a995ee
        cmd: /app/dicehub
        ports:
          - port: 10000
            protocol: TCP
            l4_protocol: TCP
            expose: false
            default: false
        envs:
          EXTENSION_MENU: '{"流水线任务":["source_code_management:代码管理","build_management:构建管理","deploy_management:部署管理","version_management:版本管理","test_management:测试管理","data_management:数据治理","custom_task:自定义任务"],"扩展服务":["database:存储","distributed_cooperation:分布式协作","search:搜索","message:消息","content_management:内容管理","security:安全","traffic_load:流量负载","monitoring&logging:监控&日志","content:文本处理","image_processing:图像处理","document_processing:文件处理","sound_processing:音频处理","custom:自定义","general_ability:通用能力","new_retail:新零售能力","srm:采供能力","solution:解决方案"]}'
          RELEASE_GC_SWITCH: "true"
          RELEASE_MAX_TIME_RESERVED: "72"
        resources:
          cpu: 0.01
          mem: 100
          max_cpu: 1
          max_mem: 2048
          network:
            mode: container
        deployments:
          replicas: 1
          labels:
            GROUP: dice
        depends_on:
          - cmdb
          - eventbox
          - monitor
          - ops
          - pipeline
        health_check:
          http:
            port: 10000
            path: /healthz
            duration: 120
          exec: {}
      eventbox:
        image: registry.erda.cloud/erda/erda:4.0-20210521-3a995ee
        cmd: /app/eventbox
        ports:
          - port: 9528
            protocol: TCP
            l4_protocol: TCP
            expose: false
            default: false
        envs:
          ALIYUN_ACCESS_KEY_ID: ""
          ALIYUN_ACCESS_KEY_SECRET: ""
          ALIYUN_SMS_SIGN_NAME: ""
          DICE_PROXY: ""
        resources:
          cpu: 0.01
          mem: 100
          max_cpu: 1
          max_mem: 2048
          network:
            mode: container
        deployments:
          replicas: 1
          labels:
            GROUP: dice
        depends_on:
          - cmdb
        health_check:
          http:
            port: 9528
            path: /api/dice/eventbox/version
            duration: 120
          exec: {}
      gittar:
        image: registry.erda.cloud/erda/gittar:1.1-20210610-ad9ee830
        cmd: /app/gittar
        ports:
          - port: 5566
            protocol: TCP
            l4_protocol: TCP
            expose: true
            default: false
        envs:
          GITTAR_BRANCH_FILTER: master,develop,feature/*,support/*,release/*,hotfix/*
          GITTAR_PORT: "5566"
          UC_CLIENT_ID: gittar
          UC_CLIENT_SECRET: AjxnTesSdhR
        resources:
          cpu: 0.01
          mem: 100
          max_cpu: 1
          max_mem: 2048
          network:
            mode: container
        binds:
          - /netdata/gittar:/repository:rw
        deployments:
          replicas: 1
          labels:
            GROUP: devops
            HAPROXY_0_BACKEND_HEAD: |
              backend {backend}
                balance {balance}
                mode {mode}
                timeout server 15m
                timeout client 15m
        depends_on:
          - cmdb
          - eventbox
          - uc
          - ui
        expose:
          - 5566
        health_check:
          http: {}
          exec: {}
      gittar-adaptor:
        image: registry.erda.cloud/erda/gittar-adaptor:4.0-20210608-b89f33e
        cmd: /app/gittar-adaptor
        ports:
          - port: 1086
            protocol: TCP
            l4_protocol: TCP
            expose: false
            default: false
        resources:
          cpu: 0.01
          mem: 100
          max_cpu: 1
          max_mem: 2048
          network:
            mode: container
        deployments:
          replicas: 1
          labels:
            GROUP: devops
        depends_on:
          - gittar
          - pipeline
          - eventbox
          - monitor
          - cmdb
        health_check:
          http:
            port: 1086
            path: /healthy
            duration: 120
          exec: {}
      openapi:
        image: registry.erda.cloud/erda/openapi:4.0-20210628-8b34f32
        cmd: /app/openapi
        ports:
          - port: 9529
            protocol: TCP
            l4_protocol: TCP
            expose: true
            default: false
        envs:
          SURVEY_DINGDING: https://oapi.dingtalk.com/robot/send?access_token=90afaca4c771605f4a67e20931d38e37454073c0ef4159eec07567bf569c442e
        resources:
          cpu: 0.01
          mem: 100
          max_cpu: 1
          max_mem: 2048
          network:
            mode: container
        deployments:
          replicas: 1
          labels:
            GROUP: dice
        depends_on:
          - cmdb
          - gittar-adaptor
          - pipeline
          - eventbox
          - dicehub
          - monitor
          - tmc
          - uc
          - ui
          - qa
          - apim
        expose:
          - 9529
        health_check:
          http:
            port: 9529
            path: /api/openapi/version
            duration: 120
          exec: {}
      ops:
        image: registry.erda.cloud/erda/erda:4.0-20210521-3a995ee
        cmd: /app/ops
        ports:
          - port: 9027
            protocol: TCP
            l4_protocol: TCP
            expose: false
            default: false
        resources:
          cpu: 0.01
          mem: 100
          max_cpu: 1
          max_mem: 2048
          network:
            mode: container
        deployments:
          replicas: 1
          labels:
            GROUP: dice
        depends_on:
          - scheduler
          - soldier
          - pipeline
          - monitor
          - dicehub
          - orchestrator
          - cmdb
        health_check:
          http: {}
          exec: {}
      orchestrator:
        cmd: /app/orchestrator
        image: registry.erda.cloud/erda/orchestrator:4.0-20210623-4b1ba231
        ports:
          - port: 8081
            protocol: TCP
            l4_protocol: TCP
            expose: false
            default: false
        envs:
          DEBUG: "false"
          TENANT_GROUP_KEY: 58dcbf490ef3
        resources:
          cpu: 0.01
          mem: 100
          max_cpu: 1
          max_mem: 2048
          network:
            mode: container
        deployments:
          replicas: 1
          labels:
            GROUP: dice
        depends_on:
          - cmdb
          - collector
          - dicehub
          - eventbox
          - scheduler
          - soldier
          - uc
          - monitor
          - hepa
          - ops
          - openapi
          - pipeline
          - gittar
        health_check:
          http:
            port: 8081
            path: /info
            duration: 120
          exec: {}
      pipeline:
        image: registry.erda.cloud/erda/pipeline:4.0-20210629-2a28c924
        cmd: /app/pipeline
        ports:
          - port: 3081
            protocol: TCP
            l4_protocol: TCP
            expose: false
            default: false
        envs:
          DICEHUB_ADDR: dicehub.{{.Values.namespace}}.svc.cluster.local:10000
          DEBUG: "false"
          DINGDING: https://oapi.dingtalk.com/robot/send?access_token=d9ebfc286e3623e81c39fd909fc58c2e45ccc7405a1c874451dfcd4588ffdec0
          DINGDING_pipeline: https://oapi.dingtalk.com/robot/send?access_token=d9ebfc286e3623e81c39fd909fc58c2e45ccc7405a1c874451dfcd4588ffdec0
          PIPELINE_STORAGE_URL: file:///devops/storage
        resources:
          cpu: 0.01
          mem: 100
          max_cpu: 1
          max_mem: 2048
          network:
            mode: container
        deployments:
          replicas: 1
          labels:
            GROUP: devops
        depends_on:
          - cmdb
          - dicehub
          - eventbox
          - gittar
          - ops
          - openapi
          - scheduler
          - hepa
        health_check:
          http:
            port: 3081
            path: /ping
            duration: 120
          exec: {}
      qa:
        image: registry.erda.cloud/erda/qa:4.0-20210608-3a38fdf4
        cmd: /app/qa
        ports:
          - port: 3033
            protocol: TCP
            l4_protocol: TCP
            expose: false
            default: false
        resources:
          cpu: 0.01
          mem: 100
          max_cpu: 1
          max_mem: 2048
          network:
            mode: container
        deployments:
          replicas: 1
          labels:
            GROUP: devops
        depends_on:
          - cmdb
          - gittar
          - nexus
          - openapi
          - sonar
          - pipeline
          - monitor
          - eventbox
        health_check:
          http:
            port: 3033
            path: /health
            duration: 120
          exec: {}
      action-runner-scheduler:
        image: registry.erda.cloud/erda/erda:4.0-20210521-3a995ee
        cmd: /app/action-runner-scheduler
        ports:
          - port: 9500
            protocol: TCP
            l4_protocol: TCP
            expose: false
            default: false
        resources:
          cpu: 0.01
          mem: 100
          max_cpu: 1
          max_mem: 2048
          network:
            mode: container
        deployments:
          replicas: 1
          labels:
            GROUP: devops
        depends_on:
          - cmdb
          - collector
          - openapi
        health_check:
          http:
            port: 9500
            path: /healthz
            duration: 120
          exec: {}
      scheduler:
        cmd: /app/scheduler
        image: registry.erda.cloud/erda/scheduler:4.0-20210705-ef33c597
        ports:
          - port: 9091
            protocol: TCP
            l4_protocol: TCP
            expose: false
            default: false
        envs:
          CMDB_CONTAINER_TOPIC: spot-metaserver_container
          CMDB_GROUP: spot_cmdb_group2
          DEBUG: "false"
        resources:
          cpu: 0.01
          mem: 100
          max_cpu: 1
          max_mem: 2048
          network:
            mode: container
        deployments:
          replicas: 1
          labels:
            GROUP: dice
        depends_on:
          - orchestrator
          - cmdb
        health_check:
          http:
            port: 9091
            path: /info
            duration: 120
          exec: {}
      soldier:
        cmd: /app/soldier
        image: registry.erda.cloud/erda/soldier:4.0-20210629-60a6d644
        ports:
          - port: 9028
            protocol: TCP
            l4_protocol: TCP
            expose: true
            default: false
        envs:
          FPS_BACKEND_URL: http://fps:17621
          NETDATA_AGENT_PATH: devops/ci/action-agent
          NETDATA_CI_PATH: devops/ci/pipelines
          NETDATA_REGISTRY_PATH: dice/registry
          NETDATA_SQLDATA_PATH: devops/storage
          PROXY_SERVICES: fps,territory,troy,zkproxy
          TERRITORY_BACKEND_RE: ^territory
          TROY_BACKEND_RE: ^troy
          ZKPROXY_BACKEND_RE: ^terminus-zkproxy
        resources:
          cpu: 0.01
          mem: 100
          max_cpu: 1
          max_mem: 2048
          network:
            mode: container
        binds:
          - /netdata:/netdata:rw
          - /var/run/docker.sock:/var/run/docker.sock:ro
        deployments:
          replicas: 1
          labels:
            GROUP: dice
        depends_on:
          - openapi
        expose:
          - 9028
        health_check:
          http:
            port: 9028
            path: /_health_check
            duration: 120
          exec: {}
    addons: {}

  diceUI:
    version: "2.0"
    meta: {}
    envs: {}
    services:
      ui:
        image: registry.erda.cloud/erda/erda-ui:1.0-20210629-00c7a3f4
        ports:
          - 80
        envs:
          TA_ENABLE: "true"
          TERMINUS_KEY: "c891011d-6115-11e9-9fe6-6c92bf3144c3"
          ENABLE_MPAAS: "false"
          ENABLE_BIGDATA: "false"
          FDP_UI_ADDR: "baidu.com"
          ONLY_FDP: "false"
        resources:
          cpu: 0.01
          mem: 100
          max_cpu: 1
          max_mem: 2048
          network:
            mode: "container"
        deployments:
          replicas: 1
          labels:
            GROUP: "dice"
        depends_on:
          - "openapi"
          - "gittar"
          - "collector"
          - "uc"
          - "fdp-ui"
        expose:
          - 80
        health_check:
          http:
            port: 80
            path: "/"
            duration: 120
    addons: {}
    environments:
      test:
        services:
          ui:
            resources:
              cpu: 0.01
              max_cpu: 1
              mem: 100
              max_mem: 256
            deployments:
              replicas: 1

  uc:
    version: "2.0"
    services:
      uc:
        image: registry.erda.cloud/erda/uc:dice-4.0-20210630-f4d63b99
        ports:
        - 8080
        envs:
          REDIRECT_URL_WHITE_LIST: http://uc.{{ .Values.domain }}/oauth/authorize,http://uc.{{ .Values.domain }}/oauth/authorize,https://uc.{{ .Values.domain }}/oauth/authorize
          SPRING_PROFILES_ACTIVE: docker
          SMS_ENABLE_NOTICE_MOCK: "false"
          JAVA_OPTS: -Xms1433m -Xmx1433m
        resources:
          cpu: 0.01
          mem: 100
          max_cpu: 1
          max_mem: 2048
          network:
            mode: container
        deployments:
          replicas: 1
          labels:
            GROUP: dice
        health_check:
          http:
            port: 8080
            path: /health
            duration: 300
        expose:
        - 8080
    
    environments:
      test:
        services:
          uc:
            resources:
              cpu: 0.01
              mem: 100
              max_cpu: 1
              max_mem: 2048
            deployments:
              replicas: 1

  spotAnalyzer:
    version: "2.0"
    meta: {}
    envs:
      AKKA_ASK_TIMEOUT: 60s
      AKKA_FRAMESIZE: 268435456b
      AKKA_LOOKUP_TIMEOUT: 60s
      AKKA_TCP_TIMEOUT: 60s
      FLINK_ENV_JAVA_OPTS_TM: -XX:+UseG1GC -XX:MaxMetaspaceSize=268435456
      HEARTBEAT_TIMEOUT: "60000"
      JOB_MANAGER_HEAP_SIZE: 700m
      PARALLELISM_DEFAULT: "2"
      RESOURCEMANAGER_JOB_TIMEOUT: 10minutes
      RESOURCEMANAGER_TASKMANAGER_TIMEOUT: "30000"
      TASK_MANAGER_MEM_PREALLOCATION: "true"
      TASK_MANAGER_MEMORY_MANAGED_FRACTION: "0"
      TASK_MANAGER_NUMBER_OF_TASK_SLOTS: "2"
    services:
      analyzer-alert:
        image: registry.erda.cloud/erda/erda-analyzer-alert:4.0.0-20210615-9f62286
        cmd: flink-entrypoint.sh jobcluster --job-classname cloud.erda.analyzer.alert.Main
        ports:
        - port: 8081
          protocol: TCP
        - port: 6123
          protocol: TCP
        - port: 6124
          protocol: TCP
        - port: 6125
          protocol: TCP
        envs:
          GROUP_ID: spot-analyzer-alert
          JOB_MANAGER_NAME: self
          STATE_BACKEND_ROCKSDB_LOCALDIR: /tmp/rocksdb
          STREAM_CHECKPOINT_ENABLE: "true"
          STREAM_CHECKPOINT_INTERVAL: "120000"
          STREAM_PARALLELISM_INPUT: "2"
          STREAM_PARALLELISM_OPERATOR: "2"
          STREAM_PARALLELISM_OUTPUT: "2"
          STREAM_STATE_BACKEND: jobmanager
          STREAM_STATE_BACKEND_FS_PATH: file:///data/checkpoints
        resources:
          cpu: 0.01
          mem: 100
          max_cpu: 1
          max_mem: 2048
          network:
            mode: container
        binds:
          - /netdata/spot-v2/analyzer/alert:/data:rw
        deployments:
          replicas: 1
          labels:
            GROUP: spot-analyzer
        depends_on:
          - cmdb
          - eventbox
        health_check:
          http:
            port: 8081
            path: /jobmanager/config
            duration: 120
          exec: {}
      analyzer-alert-task:
        image: registry.erda.cloud/erda/erda-analyzer-alert:4.0.0-20210615-9f62286
        cmd: flink-entrypoint.sh taskmanager
        ports:
        - port: 6123
          protocol: TCP
        - port: 6124
          protocol: TCP
        - port: 6125
          protocol: TCP
        envs:
          JOB_MANAGER_NAME: analyzer_alert
          TASK_MANAGER_MEMORY_PROCESS_SIZE: 1843m
        resources:
          cpu: 0.01
          mem: 100
          max_cpu: 1
          max_mem: 2048
          network:
            mode: container
        binds:
          - /netdata/spot-v2/analyzer/alert:/data:rw
        deployments:
          replicas: 1
          labels:
            GROUP: spot-analyzer
        depends_on:
          - analyzer-alert
        health_check:
          http: {}
          exec:
            cmd: ps aux | grep TaskManagerRunner || exit 1
            duration: 120
      analyzer-error-insight:
        image: registry.erda.cloud/erda/erda-analyzer-error-insight:4.0.0-20210615-9f62286
        cmd: flink-entrypoint.sh jobcluster --job-classname cloud.erda.analyzer.errorInsight.Main
        ports:
        - port: 8081
          protocol: TCP
        - port: 6123
          protocol: TCP
        - port: 6124
          protocol: TCP
        - port: 6125
          protocol: TCP
        envs:
          CASSANDRA_BATCHSIZE: "10"
          GROUP_ID: spot-analyzer-error-insight
          JOB_MANAGER_NAME: self
          STREAM_PARALLELISM_INPUT: "2"
          STREAM_PARALLELISM_OPERATOR: "2"
          STREAM_PARALLELISM_OUTPUT: "2"
        resources:
          cpu: 0.01
          mem: 100
          max_cpu: 1
          max_mem: 2048
          network:
            mode: container
        binds:
          - /netdata/spot-v2/analyzer/error-insight:/data:rw
        deployments:
          replicas: 1
          labels:
            GROUP: spot-analyzer
        health_check:
          http:
            port: 8081
            path: /jobmanager/config
            duration: 120
          exec: {}
      analyzer-error-insight-task:
        image: registry.erda.cloud/erda/erda-analyzer-error-insight:4.0.0-20210615-9f62286
        cmd: flink-entrypoint.sh taskmanager
        ports:
        - port: 6123
          protocol: TCP
        - port: 6124
          protocol: TCP
        - port: 6125
          protocol: TCP
        envs:
          JOB_MANAGER_NAME: analyzer_error_insight
          TASK_MANAGER_MEMORY_PROCESS_SIZE: 1843m
        resources:
          cpu: 0.01
          mem: 100
          max_cpu: 1
          max_mem: 2048
          network:
            mode: container
        binds:
          - /netdata/spot-v2/analyzer/error-insight:/data:rw
        deployments:
          replicas: 1
          labels:
            GROUP: spot-analyzer
        depends_on:
          - analyzer-error-insight
        health_check:
          http: {}
          exec:
            cmd: ps aux | grep TaskManagerRunner || exit 1
            duration: 120
      analyzer-metrics:
        image: registry.erda.cloud/erda/erda-analyzer-metrics:4.0.0-20210607-a14eed0
        cmd: flink-entrypoint.sh jobcluster --job-classname cloud.erda.analyzer.metrics.Main
        ports:
        - port: 8081
          protocol: TCP
        - port: 6123
          protocol: TCP
        - port: 6124
          protocol: TCP
        - port: 6125
          protocol: TCP
        envs:
          GROUP_ID: spot-analyzer-metrics
          JOB_MANAGER_NAME: self
          PARALLELISM_DEFAULT: "4"
          STATE_BACKEND_ROCKSDB_LOCALDIR: /tmp/rocksdb
          STREAM_CHECKPOINT_ENABLE: "false"
          STREAM_CHECKPOINT_INTERVAL: "120000"
          STREAM_PARALLELISM_INPUT: "4"
          STREAM_PARALLELISM_OPERATOR: "4"
          STREAM_PARALLELISM_OUTPUT: "4"
          STREAM_STATE_BACKEND: jobmanager
          STREAM_STATE_BACKEND_FS_PATH: file:///data/checkpoints
        resources:
          cpu: 0.01
          mem: 100
          max_cpu: 1
          max_mem: 2048
          network:
            mode: container
        binds:
          - /netdata/spot-v2/analyzer/metrics:/data:rw
        deployments:
          replicas: 1
          labels:
            GROUP: spot-analyzer
        health_check:
          http:
            port: 8081
            path: /jobmanager/config
            duration: 120
          exec: {}
      analyzer-metrics-task:
        image: registry.erda.cloud/erda/erda-analyzer-metrics:4.0.0-20210607-a14eed0
        cmd: flink-entrypoint.sh taskmanager
        ports:
        - port: 6123
          protocol: TCP
        - port: 6124
          protocol: TCP
        - port: 6125
          protocol: TCP
        envs:
          JOB_MANAGER_NAME: analyzer_metrics
          TASK_MANAGER_MEMORY_PROCESS_SIZE: 1843m
        resources:
          cpu: 0.01
          mem: 100
          max_cpu: 1
          max_mem: 2048
          network:
            mode: container
        binds:
          - /netdata/spot-v2/analyzer/metrics:/data:rw
        deployments:
          replicas: 1
          labels:
            GROUP: spot-analyzer
        depends_on:
          - analyzer-metrics
        health_check:
          http: {}
          exec:
            cmd: ps aux | grep TaskManagerRunner || exit 1
            duration: 120
    addons: {}
    environments:
      test:
        envs:
          AKKA_FRAMESIZE: 62914560b
          JOB_MANAGER_HEAP_SIZE: 375m
        services:
          analyzer-alert:
            resources:
              cpu: 0.01
              mem: 100
              max_cpu: 1
              max_mem: 2048
          analyzer-error-insight:
            resources:
              cpu: 0.01
              mem: 100
              max_cpu: 1
              max_mem: 2048
          analyzer-metrics:
            envs:
              PARALLELISM_DEFAULT: "2"
              STREAM_PARALLELISM_INPUT: "2"
              STREAM_PARALLELISM_OPERATOR: "2"
              STREAM_PARALLELISM_OUTPUT: "2"
            resources:
              cpu: 0.01
              mem: 100
              max_cpu: 1
              max_mem: 2048
          analyzer-metrics-task:
            deployments:
              replicas: 1
  spotTelegraf:
    version: "2"
    meta: {}
    envs: {}
    services:
      telegraf:
        image: registry.erda.cloud/erda/telegraf:4.0-20210527-a8a0005
        ports:
        - port: 8090
          protocol: TCP
          l4_protocol: TCP
          expose: false
          default: false
        envs:
          CLUSTER_PATH: /rootfs/etc/cluster-node
          COLLECTOR_AUTH_PASSWORD: G$9767bP32drYFPWrK4XMLRMTatiM6cU
          COLLECTOR_AUTH_USERNAME: collector
          HOST_ETC: /rootfs/etc
          HOST_MOUNT_PREFIX: /rootfs
          HOST_PROC: /rootfs/proc
          HOST_SYS: /rootfs/sys
          HPROF_OUTPUT_PATH: /rootfs/tmp
          INPUT_DOCKER_TAG_KEYS: '[''DICE_*'', ''N?_DICE_*'', ''EDAS_*'', ''ADDON_ID'', ''N?_ADDON_ID'', ''TERMINUS_KEY'', ''TERMINUS_DEFINE_TAG'', ''MESOS_TASK_ID'', ''POD_IP'', ''io.kubernetes.pod.name'', ''io.kubernetes.pod.namespace'', ''io.kubernetes.pod.uid'']'
          INPUT_METASERVER_FIELD_KEYS: '[''DICE_*'', ''N?_DICE_*'', ''EDAS_*'', ''TERMINUS_DEFINE_TAG'', ''POD_IP'', ''io.kubernetes.pod.name'', ''io.kubernetes.pod.namespace'']'
          SADC_PATH: /usr/lib64/sa/sadc
          SADF_PATH: /usr/bin/sadf
          TELEGRAF_PPROF_PORT: "6962"
        resources:
          cpu: 0.01
          mem: 100
          max_cpu: 1
          max_mem: 2048
          network:
              mode: host
        binds:
          - /:/rootfs:ro
          - /tmp:/rootfs/tmp:rw
          - /run/udev:/run/udev:ro
        deployments:
          replicas: 1
          labels:
            GROUP: spot-v2
            PRIVILEGED: "true"
        depends_on:
        - collector
        - telegraf-platform
        health_check:
          exec:
            cmd: ps aux | grep telegraf || exit 1
            duration: 120
      telegraf-app:
        image: registry.erda.cloud/erda/telegraf:4.0-20210527-a8a0005
        ports:
        - port: 8091
          protocol: TCP
          l4_protocol: TCP
          expose: false
          default: false
        envs:
          CLUSTER_PATH: /rootfs/etc/cluster-node
          COLLECTOR_AUTH_PASSWORD: G$9767bP32drYFPWrK4XMLRMTatiM6cU
          COLLECTOR_AUTH_USERNAME: collector
          TELEGRAF_CONFIG: telegraf-app
          TELEGRAF_PPROF_PORT: "6963"
        resources:
          cpu: 0.01
          mem: 100
          max_cpu: 1
          max_mem: 2048
          network:
              mode: host
        binds:
          - /:/rootfs:ro
        deployments:
          replicas: 1
          labels:
            GROUP: spot-v2
            PRIVILEGED: "true"
        depends_on:
        - collector
        health_check:
          exec:
            cmd: ps aux | grep telegraf || exit 1
            duration: 120
      telegraf-platform:
        image: registry.erda.cloud/erda/telegraf:4.0-20210527-a8a0005
        ports:
        - port: 8092
          protocol: TCP
          l4_protocol: TCP
          expose: false
          default: false
        - port: 8094
          protocol: UDP
          l4_protocol: UDP
          expose: false
          default: false
        - port: 8095
          protocol: TCP
          l4_protocol: TCP
          expose: false
          default: false
        - port: 6963
          protocol: TCP
          l4_protocol: TCP
          expose: false
          default: false
        - port: 7180
          protocol: TCP
          l4_protocol: TCP
          expose: false
          default: false
        envs:
          CASSANDRA_EXPORTER_JMX_ADDR: addon-cassandra-exporter-jmx.default.svc.cluster.local
          CASSANDRA_JOLOKIA_PORT: "8778"
          CLUSTER_PATH: /rootfs/etc/cluster-node
          COLLECTOR_AUTH_PASSWORD: G$9767bP32drYFPWrK4XMLRMTatiM6cU
          COLLECTOR_AUTH_USERNAME: collector
          HOST_ETC: /rootfs/etc
          HOST_MOUNT_PREFIX: /rootfs
          HOST_PROC: /rootfs/proc
          HOST_SYS: /rootfs/sys
          HPROF_OUTPUT_PATH: /rootfs/tmp
          KAFKA_JOLOKIA_PORT: "8778"
          TELEGRAF_CONFIG: platform.alone
          TELEGRAF_PPROF_PORT: "6964"
          TERMINUS_LOG_COLLECT: "false"
        resources:
          cpu: 0.01
          mem: 100
          max_cpu: 1
          max_mem: 2048
        binds:
          - /:/rootfs:ro
          - /netdata/dice-ops/dice-config/certificates:/netdata/dice-ops/dice-config/certificates:ro
        deployments:
          replicas: 1
          labels:
              GROUP: spot-v2
              PRIVILEGED: "true"
        depends_on:
        - collector
        health_check:
          exec:
            cmd: ps aux | grep telegraf || exit 1
            duration: 120
    addons: {}

  spotFilebeat:
    version: "2.0"
    meta: {}
    envs: {}
    services:
      filebeat:
        image: registry.erda.cloud/erda/filebeat:4.0.0-20210422-5b97371
        envs:
          DOCKER_SOCK_PATH: unix:///rootfs/var/run/docker.sock
          COLLECTOR_AUTH_PASSWORD: G$9767bP32drYFPWrK4XMLRMTatiM6cU
          COLLECTOR_AUTH_USERNAME: collector
        resources:
          cpu: 0.01
          mem: 100
          max_cpu: 1
          max_mem: 2048
          network:
            mode: container
        binds:
        - /var/lib/docker/containers:/var/lib/docker/containers:ro
        - /data/kube-apiserver/audit-logs:/data/kube-apiserver/audit-logs:ro
        - /data/spot-v2/filebeat:/data/spot/filebeat:rw
        - /var/run:/rootfs/var/run:ro
        deployments:
          replicas: 1
          labels:
            GROUP: spot-v2
        depends_on:
        - collector
        health_check:
          http: {}
          exec:
            cmd: ps aux | grep filebeat || exit 1
            duration: 120
    addons: {}

  tmc:
    version: "2.0"
    meta: {}
    envs: {}
    services:
      tmc:
        image: registry.erda.cloud/erda/tmc:4.0.0-20210611-95bcc05
        ports:
        - port: 8050
          protocol: TCP
          l4_protocol: TCP
          expose: false
          default: false
        envs:
          ERDA_VERSION: "1.0"
          ADDON_MONITOR_REGISTER: "false"
          ADDON_MONITOR_VERSION: 3.3.0
          REPORT_WEEKLY_ENABLE: "false"
          SERVICE_PROVIDERS: TERMINUS,EDAS
          JAVA_OPTS: -Xms1024m -Xmx1024m
        resources:
          cpu: 0.01
          mem: 100
          max_cpu: 1
          max_mem: 2048
          network:
            mode: container
        binds:
        - /netdata/tmc:/tmc:rw
        deployments:
          replicas: 1
          labels:
            GROUP: addons
        depends_on:
        - collector
        - cmdb
        - scheduler
        - orchestrator
        - dicehub
        - ui
        - monitor
        - hepa
        - eventbox
        - mesh-controller
        - soldier
        health_check:
          http: {}
          exec: {}
    addons: {}
    environments:
      test:
        services:
          tmc:
            resources:
              cpu: 0.01
              mem: 100
              max_cpu: 1
              max_mem: 2048

  hepa:
    version: "2.0"
    meta: {}
    envs: {}
    services:
      hepa:
        cmd: /app/hepa
        image: registry.erda.cloud/erda/erda:4.0-20210521-3a995ee
        ports:
        - port: 8080
          protocol: TCP
          l4_protocol: TCP
          expose: true
          default: false
        resources:
          cpu: 0.01
          mem: 100
          max_cpu: 1
          max_mem: 2048
          network:
            mode: container
        deployments:
          replicas: 1
          labels:
            GROUP: addons
        depends_on:
        - cmdb
        - scheduler
        - monitor
        - orchestrator
        - dicehub
        - eventbox
        - ops
        expose:
        - 8080
        health_check:
          http:
            port: 8080
            path: /api/gateway/health/check
            duration: 120
          exec: {}
    addons: {}

  spotMonitor:
    version: "2"
    meta: {}
    envs: {}
    services:
      collector:
        image: registry.erda.cloud/erda/erda:4.0-20210510-73c6b42
        cmd: /app/collector
        ports:
        - port: 7076
          protocol: TCP
          l4_protocol: TCP
          expose: false
          default: false
        - port: 7098
          protocol: TCP
          l4_protocol: TCP
          expose: false
          default: false
        envs:
          COLLECTOR_BROWSER_SAMPLING_RATE: "100"
          COLLECTOR_ENABLE: "true"
        resources:
          cpu: 0.01
          mem: 100
          max_cpu: 1
          max_mem: 2048
        deployments:
          replicas: 1
          labels:
            GROUP: spot-v2
        expose:
        - 7076
        health_check:
          http:
            port: 7076
            path: /api/health
            duration: 120
      monitor:
        cmd: /app/monitor
        image: registry.erda.cloud/erda/erda:4.0-20210618-d793669
        ports:
        - port: 7096
          protocol: TCP
          l4_protocol: TCP
          expose: false
          default: false
        - port: 7098
          protocol: TCP
          l4_protocol: TCP
          expose: false
          default: false
        envs:
          BROWSER_ENABLE: "true"
          BROWSER_GROUP_ID: spot-monitor-browser
          CASSANDRA_BATCH_SIZE: "50"
          CASSANDRA_PARALLELISM: "3"
          ES_BATCH_SIZE: "50"
          ES_PARALLELISM: "3"
          LOG_TTL: 168h
          METRIC_INDEX_TTL: 192h
          TRACE_TTL: 168h
        resources:
          cpu: 0.01
          mem: 100
          max_cpu: 1
          max_mem: 2048
        deployments:
          replicas: 1
          labels:
            GROUP: spot-v2
        depends_on:
        - openapi
        - scheduler
        - cmdb
        - pipeline
        - ui
        - ops
        - collector
        health_check:
          http:
            port: 7096
            path: /api/health
            duration: 120
      streaming:
        cmd: /app/streaming
        image: registry.erda.cloud/erda/erda:4.0-20210519-37c67ed
        ports:
        - port: 7091
          protocol: TCP
          l4_protocol: TCP
          expose: false
          default: false
        - port: 7098
          protocol: TCP
          l4_protocol: TCP
          expose: false
          default: false
        envs:
          BROWSER_ENABLE: "true"
          BROWSER_GROUP_ID: spot-monitor-browser
          CASSANDRA_BATCH_SIZE: "50"
          CASSANDRA_PARALLELISM: "3"
          ES_BATCH_SIZE: "50"
          ES_PARALLELISM: "3"
          KAFKA_BATCH_SIZE: "50"
          KAFKA_PARALLELISM: "3"
          LOG_GROUP_ID: spot-monitor-log
          LOG_STORE_ENABLE: "true"
          LOG_TTL: 168h
          METRIC_ENABLE: "true"
          METRIC_GROUP_ID: spot-monitor-metrics
          METRIC_INDEX_TTL: 192h
          TRACE_ENABLE: "true"
          TRACE_GROUP_ID: spot-monitor-trace
          TRACE_TTL: 168h
        resources:
          cpu: 0.01
          mem: 100
          max_cpu: 1
          max_mem: 2048
        deployments:
          replicas: 1
          labels:
            GROUP: spot-v2
        depends_on:
        - openapi
        - scheduler
        - cmdb
        - pipeline
        - ui
        - ops
        - collector
        health_check:
          http:
            port: 7091
            path: /api/health
            duration: 120
    addons: {}
