apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    dice/addon: {{ .Values.elasticsearch.name | default "addon-elasticsearch" }}
  name: {{ .Values.elasticsearch.name | default "addon-elasticsearch" }}
  namespace: {{ .Values.global.namespace | default "erda-system" }}
spec:
  podManagementPolicy: OrderedReady
  replicas: {{ .Values.elasticsearch.replicas | default 1 }}
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      dice/addon: {{ .Values.elasticsearch.name | default "addon-elasticsearch" }}
  serviceName: elasticsearch
  template:
    metadata:
      labels:
        dice/addon: {{ .Values.elasticsearch.name | default "addon-elasticsearch" }}
    spec:
      tolerations:
        - operator: Exists
      containers:
        - env:
            - name: CLUSTER_NAME
              value: {{ .Values.elasticsearch.name | default "addon-elasticsearch" }}
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: DISCOVERY_SERVICE
              value: {{ .Values.elasticsearch.name | default "addon-elasticsearch" }}-master
            - name: SSL_ENABLE
              value: "false"
            - name: KEY_PASS
              valueFrom:
                secretKeyRef:
                  key: key_pass
                  name: {{ .Values.elasticsearch.name | default "addon-elasticsearch" }}-cert
            - name: NUMBER_OF_MASTERS
              value: "1"
            - name: MODE
              value: client
            - name: ES_JAVA_OPTS
              value: -Xms4096m -Xmx4096m
            - name: SEARCHGUARD_DISABLED
              value: "true"
          image:  {{ .Values.global.image.repository }}/{{ .Values.elasticsearch.name | default "addon-elasticsearch" }}:{{ .Values.elasticsearch.version }}
          imagePullPolicy: {{ .Values.global.image.imagePullPolicy }}
          livenessProbe:
            failureThreshold: 9
            httpGet:
              path: /_cluster/health
              port: 9200
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 10
          name: elasticsearch
          ports:
            - containerPort: 9300
              name: transport
              protocol: TCP
            - containerPort: 9200
              name: http
              protocol: TCP
          resources:
            requests:
              cpu: {{ .Values.elasticsearch.resources.requests.cpu | default "200m" | quote }}
              memory: {{ .Values.elasticsearch.resources.requests.memory | default "819Mi" | quote }}
            limits:
              cpu: {{ .Values.elasticsearch.resources.limits.cpu |  default "2" | quote }}
              memory: {{ .Values.elasticsearch.resources.limits.memory | default "8Gi" | quote }}
          securityContext:
            capabilities:
              add:
                - IPC_LOCK
                - SYS_RESOURCE
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /elasticsearch/custom-config
              name: custom-config
            - mountPath: /elasticsearch/plugins/search-guard-6/sgconfig
              name: sgconfig
            - mountPath: /elasticsearch/config/certs
              name: certs
            - mountPath: /data
              name: data-{{ .Values.elasticsearch.name | default "addon-elasticsearch" }}
            - mountPath: /tmp
              name: temp
      dnsPolicy: ClusterFirst
      initContainers:
        - command:
            - sysctl
            - -w
            - vm.max_map_count=262144
          image: registry.erda.cloud/erda/kubedb-busybox:1.0.0
          imagePullPolicy: IfNotPresent
          name: init-sysctl
          resources:
            requests:
              cpu: {{ .Values.elasticsearch.resources.requests.cpu | default "200m" | quote }}
              memory: {{ .Values.elasticsearch.resources.requests.memory | default "819Mi" | quote }}
            limits:
              cpu: {{ .Values.elasticsearch.resources.limits.cpu |  default "2" | quote }}
              memory: {{ .Values.elasticsearch.resources.limits.memory | default "8Gi" | quote }}
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: addon-elasticsearch
      serviceAccountName: addon-elasticsearch
      terminationGracePeriodSeconds: 30
      volumes:
        - configMap:
            defaultMode: 420
            name: addon-elasticsearch-config
          name: custom-config
        - name: sgconfig
          secret:
            defaultMode: 420
            secretName: addon-elasticsearch-auth
        - name: certs
          secret:
            defaultMode: 420
            items:
              - key: root.jks
                path: root.jks
              - key: node.jks
                path: node.jks
              - key: sgadmin.jks
                path: sgadmin.jks
            secretName: addon-elasticsearch-cert
        - name: data-{{ .Values.elasticsearch.name | default "addon-elasticsearch" }}
          persistentVolumeClaim:
            claimName: data-{{ .Values.elasticsearch.name | default "addon-elasticsearch" }}
        - emptyDir: {}
          name: temp
  updateStrategy:
    type: RollingUpdate

